<project xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:p="antlib:de.perdian.ant.webstart">

  <property name="project.name" value="ant-webstart" />
  <property name="project.directory" location="./" />
  <property name="release.target.directory" location="${project.directory}/release/" />
  <property name="release.version" value="1.0" />
  <property name="build.version" value="SNAPSHOT" />
  <property name="build.target.directory" location="${project.directory}/build/" />
  <property name="ivy.local.default.root" value="${build.target.directory}/repository/"/>

  <target name="init">
    <ivy:resolve file="${project.directory}/ivy.xml" log="quiet" />
    <mkdir dir="${build.target.directory}" />
  </target>

  <target name="clean" depends="init">
    <delete includeemptydirs="true">
      <fileset dir="${build.target.directory}" />
    </delete>
  </target>

  <target name="compile" depends="init">
    <ivy:cachepath pathid="project.compile.classpath.id" conf="compile" log="quiet" />
    <mkdir dir="${build.target.directory}/classes/main/" />
    <javac destdir="${build.target.directory}/classes/main/" includeantruntime="false" debug="true" source="1.6" target="1.6">
      <classpath refid="project.compile.classpath.id" />
      <src path="${project.directory}/src/main/java/" />
    </javac>
    <copy todir="${build.target.directory}/classes/main/" failonerror="false">
      <fileset dir="${project.directory}/src/main/resources/" />
    </copy>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${build.target.directory}/jar/" />
    <jar destfile="${build.target.directory}/jar/${project.name}-${release.version}.jar">
      <fileset dir="${build.target.directory}/classes/main/" />
    </jar>
  </target>

  <target name="build-lib" depends="clean, jar">
  </target>

  <target name="distribute-lib" depends="build-lib">

    <mkdir dir="${build.target.directory}/distribution/lib/" />
    <copy todir="${build.target.directory}/distribution/lib/">
      <fileset dir="${build.target.directory}/jar/" />
      <fileset dir="${project.directory}/src/main/release/lib/" />
    </copy>

<!--
    Currently, there are not dependencies to be included in the distribution,
    so we can ignore the retrieve process here

    <mkdir dir="${build.target.directory}/distribution/lib/libs/" />
    <ivy:retrieve conf="lib" pattern="${build.target.directory}/distribution/lib/libs/[artifact].[ext]" />
-->

  </target>

  <target name="release-lib" depends="distribute-lib">

    <mkdir dir="${release.target.directory}/archive/" />
    <zip destfile="${release.target.directory}/archive/${project.name}-${release.version}.zip">
      <fileset dir="${build.target.directory}/distribution/lib/" />
    </zip>

    <mkdir dir="${release.target.directory}/latest/" />
    <delete failonerror="false" includeemptydirs="true">
      <fileset dir="${release.target.directory}/latest/" />
    </delete>
    <zip destfile="${release.target.directory}/latest/${project.name}-${release.version}.zip">
      <fileset dir="${build.target.directory}/distribution/lib/" />
    </zip>

  </target>

  <target name="publish-lib" depends="distribute-lib">

    <mkdir dir="${build.target.directory}/publish/" />
    <jar destfile="${build.target.directory}/publish/jar-${ivy.module}.jar">
      <fileset dir="${build.target.directory}/classes/main/" />
    </jar>

    <zip destfile="${build.target.directory}/publish/source-${ivy.module}-sources.jar">
      <fileset dir="${project.directory}/src/main/java/" />
    </zip>

    <property name="publish.version">${release.version}.${build.version}</property>

    <ivy:makepom ivyfile="${project.directory}/ivy.xml" pomfile="${build.target.directory}/publish/pom-${ivy.module}.pom"/>
    <ivy:publish resolver="local" overwrite="true" pubrevision="${publish.version}">
      <artifacts pattern="${build.target.directory}/publish/[type]-[artifact].[ext]" />
      <artifacts pattern="${build.target.directory}/publish/[type]-[artifact](-[classifier]).[ext]" />
    </ivy:publish>

  </target>

</project>